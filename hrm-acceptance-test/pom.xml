<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<!-- Parent project which has defined groovy compiler, groovy spock framework 
		and maven spock test configuration -->
	<!-- Groovy spec's should be placed in directory src/test/groovy -->
	<parent>
		<groupId>visual.common.spok.acceptance</groupId>
		<artifactId>spock-acceptance-test</artifactId>
		<version>1.0.0</version>
	</parent>


	<groupId>com.hrm.ws.ui.test</groupId>
	<artifactId>hrm-acceptance-test</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>hrm-acceptance-test</name>
	<url>http://maven.apache.org</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<test.web.app.name>hrm-web-client.war</test.web.app.name>
		<org.springframework.version>3.0.5.RELEASE</org.springframework.version>
	</properties>

	<dependencies>
		<!-- WebApp to be tested -->
		<dependency>
			<groupId>com.hrm.web</groupId>
			<artifactId>hrm-web-client</artifactId>
			<version>0.0.1-SNAPSHOT</version>
			<type>war</type>
		</dependency>

		<!-- Selenium -->
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-java</artifactId>
			<version>2.21.0</version>
		</dependency>
		
		 <!-- Spring Framework: Test - spring-test -->
	    <dependency>
	        <groupId>org.springframework</groupId>
	        <artifactId>spring-test</artifactId>
	        <version>${org.springframework.version}</version>
	    </dependency>
	    
	    <dependency>
			  <groupId>org.springframework</groupId>
			  <artifactId>spring-core</artifactId>
			  <version>${org.springframework.version}</version>
		</dependency>
		
		<dependency>
			  <groupId>org.springframework</groupId>
			  <artifactId>spring-beans</artifactId>
			  <version>${org.springframework.version}</version>
		</dependency>
		
		<dependency>
			  <groupId>org.springframework</groupId>
			  <artifactId>spring-context</artifactId>
			  <version>${org.springframework.version}</version>
		</dependency>
		
		<dependency>
			<groupId>org.spockframework</groupId>
			<artifactId>spock-spring</artifactId>
			<version>0.6-groovy-1.8</version>
		</dependency>

	</dependencies>

	<build>
		<plugins>
			<!-- Configured to copy the hrm-web-client application archive to the 
				build directory -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy</id>
						<phase>package</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<configuration>
							<artifactItems>

								<artifactItem>
									<groupId>com.hrm.web</groupId>
									<artifactId>hrm-web-client</artifactId>
									<version>0.0.1-SNAPSHOT</version>
									<type>war</type>
									<overWrite>true</overWrite>
									<destFileName>${test.web.app.name}</destFileName>
								</artifactItem>

							</artifactItems>

							<outputDirectory>
								${project.build.directory}/war
							</outputDirectory>

							<overWriteReleases>true</overWriteReleases>
							<overWriteSnapshots>true</overWriteSnapshots>

						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- The Selenium server is started during the pre-integration-test phase 
				as a background process. This makes the Selenium server available to any 
				integration tests that need to interact with a browser. -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>selenium-maven-plugin</artifactId>
				<executions>
					<execution>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>start-server</goal>
						</goals>
						<configuration>
							<background>true</background>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- The start-jetty execution starts the Jetty server in the pre-integration-test 
				phase. The stop-jetty execution stops the Jetty server after the integration 
				tests have been executed. -->
			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>maven-jetty-plugin</artifactId>
				<version>6.1.22</version>

				<executions>
					<execution>
						<id>start-jetty</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>run-war</goal>
						</goals>
						<configuration>
							<contextPath>hrm-web-client</contextPath>
							<daemon>true</daemon>
							<webApp>
								${project.build.directory}/war/${test.web.app.name}
							</webApp>
						</configuration>
					</execution>

					<execution>
						<id>stop-jetty</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>stop</goal>
						</goals>
					</execution>

				</executions>

				<configuration>
					<stopPort>9991</stopPort>
					<stopKey>test</stopKey>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
